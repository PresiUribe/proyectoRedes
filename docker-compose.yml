services:
  db:
    image: mysql:8.0
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./Airbnb_Texas_Rentals.csv:/var/lib/mysql-files/propiedades.csv
    environment:
      MYSQL_ROOT_PASSWORD: mysql
    networks:
      - backend

  usuario_ms:
    build: ./usuario
    image: usuario_ms:latest
    restart: unless-stopped
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: mysql
      DB_NAME: usuariosMS
    networks:
      - backend

  reservas_ms:
    build: ./reservas
    image: reservas_ms:latest
    restart: unless-stopped
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: mysql
      DB_NAME: reservasMS
      USERS_URL: http://usuario_ms:3000
    networks:
      - backend

  propiedades_ms:
    build: ./propiedades
    image: propiedades_ms:latest
    restart: unless-stopped
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: mysql
      DB_NAME: propiedadesMS
    networks:
      - backend

  pagos_ms:
    build: ./pagos
    image: pagos_ms:latest
    restart: unless-stopped
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: mysql
      DB_NAME: pagosMS
      RESERVAS_URL: http://reservas_ms:3000
      USERS_URL: http://usuario_ms:3000
    networks:
      - backend

  haproxy:
    image: haproxy:2.6-alpine
    restart: unless-stopped
    depends_on:
      - usuario_ms
      - reservas_ms
      - propiedades_ms
      - pagos_ms
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "80:80"
      - "8404:8404"
    networks:
      - backend

  prometheus:
    image: prom/prometheus:latest
    container_name: proyecto_prometheus
    restart: unless-stopped
    depends_on:
      - haproxy
      - usuario_ms
      - reservas_ms
      - propiedades_ms
      - pagos_ms
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: proyecto_grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "3003:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    networks:
      - backend

  front:
    image: nginx:alpine
    container_name: proyecto_front
    ports:
      - "8081:80"
    volumes:
      - ./front:/usr/share/nginx/html:ro
      - ./front/nginx.conf:/etc/nginx/conf.d/default.conf:ro  # si usas config custom
    networks:
      - backend


networks:
  backend:
    driver: bridge

volumes:
  db_data:
    driver: local
