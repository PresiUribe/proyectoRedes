const { Router } = require('express');
const router = Router();
const propiedadesModel = require('../models/propiedadesModel');

// Obtener todas las propiedades con filtros opcionales
router.get('/propiedades', async (req, res) => {
  try {
    // 1) Leemos filtros de query params
    const filtros = {
      city           : req.query.city           || null,
      bedrooms_count : req.query.bedrooms_count || req.query.cuartos || null,
      precio_min     : req.query.precio_min     || null,
      precio_max     : req.query.precio_max     || null
    };

    // 2) Paginación
    const page   = Math.max(1, parseInt(req.query.page, 10)  || 1);
    const limit  = Math.max(1, parseInt(req.query.limit, 10) || 20);
    const offset = (page - 1) * limit;

    // 3) Contar total con esos mismos filtros
    const total = await propiedadesModel.contarPropiedades(filtros);

    // 4) Traer sólo esta página
    const data = await propiedadesModel.traerPropiedades({
      filtros,
      limit,
      offset
    });

    // 5) Enviamos respuesta uniforme
    res.json({
      data,
      pagination: {
        total,
        page,
        pageSize: limit,
        totalPages: Math.ceil(total / limit)
      }
    });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Error al listar propiedades' });
  }
});


// Obtener una propiedad por ID
router.get('/propiedades/:id', async (req, res) => {
    const id = req.params.id;
    const propiedad = await propiedadesModel.traerPropiedad(id);
    res.json(propiedad[0]);
});

// Crear una nueva propiedad
router.post('/propiedades', async (req, res) => {
    const { titulo, descripcion, city, precio, numero_bedrooms_count } = req.body;
    await propiedadesModel.crearPropiedad(titulo, descripcion, city, precio, numero_bedrooms_count);
    res.send("Propiedad creada");
});

// Actualizar una propiedad existente (acción para ADMIN)
router.put('/propiedades/:id', async (req, res) => {
    const id = req.params.id;
    const { titulo, descripcion, city, precio, numero_bedrooms_count } = req.body;
    await propiedadesModel.actualizarPropiedad(id, titulo, descripcion, city, precio, numero_bedrooms_count);
    res.send("Propiedad actualizada");
});

// Eliminar una propiedad (acción para ADMIN)
router.delete('/propiedades/:id', async (req, res) => {
    const id = req.params.id;
    await propiedadesModel.borrarPropiedad(id);
    res.send("Propiedad eliminada");
});


// En propiedadesController.js
router.put('/propiedades/:id/disponibilidad', async (req, res) => {
  const id = req.params.id;
  // Se espera recibir en el body algo como { disponible: true } o { disponible: false }
  const { disponible } = req.body;
  try {
    const result = await propiedadesModel.actualizarDisponibilidad(id, disponible);
    if (result.affectedRows > 0) {
      res.json({ message: "Disponibilidad actualizada" });
    } else {
      res.status(404).send("Propiedad no encontrada");
    }
  } catch (error) {
    console.error(error);
    res.status(500).send("Error al actualizar la disponibilidad");
  }
});



module.exports = router;
